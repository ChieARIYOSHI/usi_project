{"version":3,"sources":["img/toppage_image.jpeg","img/toppage_eat.jpeg","img/toppage_live.jpeg","img/eat_1.jpg","components/eat.js","components/toppage.js","img/logo_shiro.png","firebase.js","components/upload_meat.js","components/done.js","components/login.js","components/signup.js","Auth.js","components/route_farmers.js","img/logo_kuro.png","components/head.js","App.js","index.js"],"names":["Head","src","rogo","className","width","alt","margin-top","TopPage","to","imagePhoto","z-index","imageEat","imageLive","App","location","useLocation","duration","path","component","exact","Eat","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","storage","UploadMeat","useState","farm","setFarm","product","setProduct","price","setPrice","gram","setGram","detail","setDetail","onChange","e","target","value","onClick","add","Done","Login","state","loading","_isMounted","handleOnSubmit","values","setState","auth","signInWithEmailAndPassword","email","password","then","res","props","history","push","catch","error","alert","componentDidMount","componentWillUnmount","style","background","padding","marginTop","textAlign","initialValues","onSubmit","validationSchema","Yup","shape","required","handleSubmit","handleChange","handleBlur","errors","touched","Form","FormGroup","Label","for","Input","type","name","id","onBlur","invalid","FormFeedback","Button","color","disabled","Spinner","size","marginRight","hidden","React","Component","withRouter","SignUp","createUserWithEmailAndPassword","tel","Auth","signinCheck","signedIn","onAuthStateChanged","user","this","children","active","spinner","text","height","RouteFarmers","render","makeStyles","theme","root","margin","spacing","useStyles","logo","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.431760dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/toppage_image.51ffbd91.jpeg\";","export default __webpack_public_path__ + \"static/media/toppage_eat.40341bc4.jpeg\";","export default __webpack_public_path__ + \"static/media/toppage_live.d5611e0a.jpeg\";","export default __webpack_public_path__ + \"static/media/eat_1.89b6dbb6.jpg\";","import React from 'react';\nimport rogo from './../img/eat_1.jpg';\nimport './eat.css';\n\nconst Head = () => {\n    return (\n    <div>\n        <img src={rogo} className=\"rogo\" width=\"100%\" alt=\"logo\" margin-top=\"100px 0\" />\n        <h1 className=\"subtitle\">あなた好みの</h1>\n        <h1 className=\"subtitle\">お肉に</h1>\n        <h1 className=\"subtitle\">きっと出会える</h1>\n\n\n        <h2 className=\"top_text\">これまでとは全く違う新しいお肉の選び方で、</h2>\n        <h2 className=\"top_text\">あなたが心から美味しいと感じるお肉に出会えます。</h2>\n        <h2 className=\"top_text\">また、お肉のサブスクリプションもご用意してお</h2>\n        <h2 className=\"top_text\">ります。その時のおすすめのお肉や、希少な部位</h2>\n        <h2 className=\"top_text\">など、私たちのおすすめのお肉を定期的にお届け</h2>\n        <h2 className=\"top_text\">します。</h2>\n        <h2 className=\"top_text\">あなたが本当に美味しいと感じる体が喜ぶお肉を</h2>\n        <h2 className=\"top_text\">探してみませんか？</h2>\n\n        <div className=\"main_2\">\n            <h1 className=\"subtitle_2\">6タイプの出会い方</h1>\n            <h2 className=\"text_1\">\"Usi Projectがご用意する６タイプの選び方をご紹介します。</h2>\n        </div>\n\n        {/* <div className=\"top_text\">\n            <p>\n                これまでとは全く違う、新いお肉の選び方で、\n                あなたが心から美味しいと思うお肉に出会えます。\n                \n                また、お肉のサブスクリプションもご用意しております。\n                その時のおすすめのお肉や、希少な部位など、\n                私たちのおすすめのお肉を定期的にお届けします。\n\n                あなたが本当に美味しいと感じる体が喜ぶお肉を探してみませんか？\n\n        </p>\n        </div> */}\n    </div>\n)};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Head\n","import React from 'react';\nimport imagePhoto from './../img/toppage_image.jpeg';\nimport imageEat from './../img/toppage_eat.jpeg';\nimport imageLive from './../img/toppage_live.jpeg';\nimport SlideRoutes from \"react-slide-routes\";\nimport { Route, NavLink, useLocation } from \"react-router-dom\";\nimport Eat from './eat';\nimport logo from './../img/logo_shiro.png';\nimport './toppage.css'\n\nconst TopPage = () => {\n  return (\n    <div>\n      <div className=\"toppage\">\n      {/* <img src={imagePhoto} className=\"top_image\" width=\"100%\" z-index=\"-1\" alt=\"top page photo\" /> */}\n      <h1 className=\"title_line_1\">牛とともに生きる。</h1>\n      <h1>食べることは、</h1>\n      <h1>生きること。</h1>\n      </div>\n      <div className=\"bannar\">\n        <nav>\n          <NavLink to=\"/eat\">\n            <div  className=\"eat_btn\">\n              <h2>たべる</h2>\n              <h4>あなた好みのお肉を選ぶ</h4>\n            </div>\n          </NavLink>\n        </nav>\n        <a className=\"live_btn\">\n          <h2>育てる</h2>\n          <h4>あなたの休日を牛とともに</h4>\n        </a>\n      </div>\n      <div className=\"main_1\">\n        <div className=\"subtitle_1\">\n          <h1>牛と人を</h1>\n          <h1>もっと</h1>\n          <h1>近く。</h1>\n        </div>\n        <div className=\"message_1\">\n          <p>\n            あなたが普段口にしているお肉がどのような場所で、どのような人が、どのように育てられた牛なのか考えたことはありますか？\n            何気なく口にしているお肉にどんなストーリーがあるのか。\n            それを知ることで、本当に安心して、美味しく、ありがたく命をいただく。\n            そんな体験をあなたの生活にお届けします。\n            わたしたちのUsi Projectでは、牛と牛を育てる人、そしてあなた自身をもっと身近につなぐ、そんなサービスを提供します。\n          </p>\n        </div>\n      </div>\n      <div className=\"imagephoto_2\">\n        <img src={imagePhoto} className=\"top_image\" width=\"100%\" z-index=\"-1\" alt=\"top page photo\" />\n        {/* ここにお肉の写真を入れる */}\n      </div>\n      <div className=\"main_2\">\n        <div className=\"subtitle_2\">\n          <h1>本当に身体にいい\n          <br/>\n          お肉って？</h1>\n        </div>\n        <div className=\"message_2\">\n          <p>\n            私たちが日常的に食べている牛肉にはA5、A4、B5といった等級（ランク）で評価されています。一般的にはA5牛肉が最もおいしいお肉だといわれています。ですが、この牛肉の等級、実はお肉の「味」で評価されているわけではありません。サシと呼ばれる脂肪がいかにきめ細やかに入っているか、そして牛の体重に対するお肉の重さで決まっているのです。そのため最高ランクといわれるA5牛肉でも、必ずしも同じ味のお肉とは言えないのです。\n            Usi Projectでは、本当に健康的に育てられた牛を安心して食べていただける。そんなセカイを目指します。\n          </p>\n        </div>\n      </div>\n\n      <div className=\"imagephoto_2\">\n        <img src={imagePhoto} className=\"top_image\" width=\"100%\" z-index=\"-1\" alt=\"top page photo\" />\n        {/* ここに牛の別写真を入れる */}\n      </div>\n      <div className=\"main_3\">\n        <div className=\"subtitle_3\">\n          <h1>健康な牛が\n          <br/>\n          育つ環境とは。</h1>\n        </div>\n        <div className=\"message_3\">\n          <p>\n            本当に健康に育てられた牛ってどんな牛だと思いますか？\n            <br/>\n            日本では現在のサシに基づく評価基準があるため、ほとんどが牛舎の中であまり運動もしない状態で、穀物飼料を食べて脂肪を蓄えることを優先して育てられた牛なのです。\n            しかし、その評価基準に囚われず牛の健康や幸せを第一に考えてこだわりを持って育てている牧場の方々も多くいらっしゃいます。\n            例えば、草原で放牧をしながら本来牛が主食とする牧草を食べながら育てたり、牛舎の中でもストレスが少ないよう自由に歩き回れる観光を配備したり、様々な工夫があります。\n            Usi Projectでは、どんな方々がどんな想いで育てた牛なのかを知っていただき、直接牧場からお肉を購入できるサイトです。\n          </p>\n        </div>\n      </div>\n\n      <div className=\"main_4\">\n        <div className=\"subtitle_4\">\n          <h1>Usi Projectについて</h1>\n        </div>\n        <div className=\"message_4\">\n          <p>\n            Usi Projectは、どんな人がどんな想いで育てた牛なのかを知っていただき、牛と牧場の方々、そしてあなたを直接繋ぐサービスです。\n          <br/>\n          主なサービスは２つ。\n          <br/>\n          　❶ 牧場から直接お肉を購入する\n          <br/>\n          　❷ 牧場の方々と一緒に牛を育てる\n          <br/>\n          ２つのサービスから自由にお選びいただけます。</p>\n          {/* <div>\n          <img src={logo} className=\"logo\" width=\"320px\" alt=\"logo\" />\n          ここに牛アイコンのみverを入れる\n          </div> */}\n        </div>\n      </div>\n\n      <div>\n        <div>\n        <a>\n          <h2>たべる</h2>\n          <p>あなた好みのお肉を選ぶ</p>\n          <img src={imageEat} className=\"eat_image\" width=\"180px\" alt=\"meat photo\" />\n        </a>\n        <a>\n          <h2>育てる</h2>\n          <p>あなたの休日を牛とともに</p>\n          <img src={imageLive} className=\"live_image\" width=\"180px\" alt=\"cattle photo\" />\n        </a>\n        </div>\n      </div>\n\n      <div>\n        <h2>Usi Project</h2>\n        <p>〒810-0041</p>\n        <p>福岡県福岡市中央区大名1-3-41</p>\n        <a>問い合わせ</a>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <SlideRoutes location={location} duration={500}>\n        <Route path=\"/\" component={TopPage} exact />\n        <Route path=\"/eat\" component={Eat} />\n      </SlideRoutes>\n    </div>\n  )};\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/logo_shiro.5e6568b2.png\";","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyC0a2EliiICqadX5GvL4W8-66LkU7zN4D4\",\n  authDomain: \"usi-project-farmers.firebaseapp.com\",\n  databaseURL: \"https://usi-project-farmers-default-rtdb.firebaseio.com\",\n  projectId: \"usi-project-farmers\",\n  storageBucket: \"usi-project-farmers.appspot.com\",\n  messagingSenderId: \"229906854528\",\n  appId: \"1:229906854528:web:eab1435609f5cd16062c65\",\n  measurementId: \"G-7ND4S3M39C\"\n});\n\n// firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore().collection('farmers_meat');\nconst storage = firebase.storage();\n\nexport { db, storage };","import React,{useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport {db} from '../firebase';\n\nconst UploadMeat = () => {\nconst [farm, setFarm] =useState()\nconst [product, setProduct] =useState()\nconst [price, setPrice] =useState()\nconst [gram, setGram] =useState()\nconst [detail, setDetail] =useState()\n\n  function PushData() {\n    db.add({ // dbが送信先 送信データはオブジェクトの形\n        farm: farm,\n        product: product,\n        price: price,\n        gram: gram,\n        detail: detail,\n    });\n  }\n  return(\n    <div>\n      <p>牧場名</p>\n      <input onChange={(e)=>{\n        setFarm(e.target.value)\n      }}></input>\n      <p>商品名</p>\n      <input onChange={(e)=>{\n        setProduct(e.target.value)\n      }}></input>\n      <p>価格（円）</p>\n      <input onChange={(e)=>{\n        setPrice(e.target.value)\n      }}></input>\n      <p>量（グラム）</p>\n      <input onChange={(e)=>{\n        setGram(e.target.value)\n      }}></input>\n      <p>商品内容</p>\n      <input onChange={(e)=>{\n        setDetail(e.target.value)\n      }}></input>\n      <br/>\n      <br/>\n      <button onClick={()=>{\n        PushData()\n      }} >\n        <Link to=\"/done\">\n          出　品\n        </Link>\n      </button>\n    </div>\n  );\n};\nexport default UploadMeat","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Done = () => {\n  return (\n    <div>\n      <p>出品ありがとうございました！</p>\n      <Link to=\"/\">Homeへ</Link>\n    </div>\n  )};\n\nexport default Done","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\n\nclass Login extends React.Component {\n\n    state = {\n        loading: false, //spinner制御用\n    }\n\n    _isMounted = false;\n\n    handleOnSubmit = (values) => {\n        //spinner表示開始\n        if (this._isMounted) this.setState({ loading: true })\n        //サインイン（ログイン）処理\n        firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n            .then(res => {\n                //正常終了時\n                this.props.history.push(\"/\");\n                if (this._isMounted) this.setState({ loading: false });\n            })\n            .catch(error => {\n                //異常終了時\n                if (this._isMounted) this.setState({ loading: false });\n                alert(error);\n            });\n\n    }\n\n    componentDidMount = () => {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"mx-auto\" style={{ width: 400, background: '#eee', padding: 20, marginTop: 60 }}>\n                    <p style={{ textAlign: 'center' }}>サインイン</p>\n                    <Formik\n                        initialValues={{ email: '', password: '' }}\n                        onSubmit={(values) => this.handleOnSubmit(values)}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string().email().required(),\n                            password: Yup.string().required(),\n                        })}\n                    >\n                        {\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n                                <Form onSubmit={handleSubmit}>\n                                    <FormGroup>\n                                        <Label for=\"email\">Email</Label>\n                                        <Input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            id=\"email\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.email && errors.email ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.email}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"password\">Password</Label>\n                                        <Input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            id=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.password && errors.password ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.password}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <div style={{ textAlign: 'center' }}>\n                                        <Button color=\"primary\" type=\"submit\" disabled={this.state.loading}>\n                                            <Spinner size=\"sm\" color=\"light\" style={{ marginRight: 5 }} hidden={!this.state.loading} />\n                                            ログイン\n                                        </Button>\n                                    </div>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n                <div className=\"mx-auto\" style={{ width: 400, background: '#fff', padding: 20 }}>\n                    <Link to=\"/signup\">新規登録はこちら。</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\n// import { Form } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\n\nclass SignUp extends React.Component {\n\n    state = {\n        loading: false, //処理中にボタンにspinner表示する制御用\n    }\n\n    _isMounted = false;\n\n    //Submitされたら\n    handleOnSubmit = (values) => {\n        //spinner表示開始\n        if (this._isMounted) this.setState({ loading: true });\n        //新規登録処理\n        firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\n            .then(res => {\n                //正常終了時\n                //spinner表示終了\n                if (this._isMounted) this.setState({ loading: false });\n                //Homeに移動\n                this.props.history.push(\"/\"); //history.pushを使うためwithRouterしている\n            })\n            .catch(error => {\n                //異常終了時\n                if (this._isMounted) this.setState({ loading: false });\n                alert(error);\n            });\n    }\n\n    componentDidMount = () => {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"mx-auto\" style={{ width: 400, background: '#eee', padding: 20, marginTop: 60 }}>\n                    <p style={{ textAlign: 'center' }}>新規登録</p>\n                    <Formik\n                        initialValues={{ email: '', password: '', tel: '' }}\n                        onSubmit={(values) => this.handleOnSubmit(values)}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string().email().required(),\n                            password: Yup.string().required(),\n                            tel: Yup.string().required(),\n                        })}\n                    >\n                        {\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n                                <Form onSubmit={handleSubmit}>\n                                    <FormGroup>\n                                        <Label for=\"name\">Email</Label>\n                                        <Input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            id=\"email\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.email && errors.email ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.email}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"password\">Password</Label>\n                                        <Input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            id=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.password && errors.password ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.password}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"tel\">Tel</Label>\n                                        <Input\n                                            type=\"tel\"\n                                            name=\"tel\"\n                                            id=\"tel\"\n                                            value={values.tel}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.tel && errors.tel ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.tel}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <div style={{ textAlign: 'center' }}>\n                                        <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                                            <Spinner size=\"sm\" color=\"light\" style={{ marginRight: 5 }} hidden={!this.state.loading} />\n                                            新規登録\n                                        </Button>\n                                    </div>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n                <div className=\"mx-auto\" style={{ width: 400, background: '#fff', padding: 20 }}>\n                    <Link to=\"/login\">ログインはこちら。</Link>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Auth extends React.Component {\n\n    state = {\n        signinCheck: false, //ログインチェックが完了してるか\n        signedIn: false, //ログインしてるか\n    }\n\n    _isMounted = false; //unmountを判断（エラー防止用）\n\n    componentDidMount = () => {\n        //mountされてる\n        this._isMounted = true;\n\n        //ログインしてるかどうかチェック\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                //してる\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: true,\n                    });\n                }\n            } else {\n                //してない\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: false,\n                    });\n                }\n            }\n        })\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        //チェックが終わってないなら（ローディング表示）\n        if (!this.state.signinCheck) {\n            return (\n                <LoadingOverlay\n                    active={true}\n                    spinner\n                    text='Loading...'\n                >\n                    <div style={{ height: '100vh', width: '100vw' }}></div>\n                </ LoadingOverlay>\n            );\n        }\n\n        //チェックが終わりかつ\n        if (this.state.signedIn) {\n            //サインインしてるとき（そのまま表示）\n            return this.props.children;\n        } else {\n            //してないとき（ログイン画面にリダイレクト）\n            return <Redirect to=\"/signin\" />\n        }\n    }\n}\nexport default Auth;","import React from 'react';\n// import './route.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport firebase from '../firebase';\n\nimport UploadMeat from './upload_meat';\nimport Done from './done';\nimport Login from './login';\nimport SignUp from './signup';\n\nimport Auth from '../Auth';\n\nclass RouteFarmers extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/farmers\" component={SignUp} />\n                    {/* 以下認証のみ */}\n                    <Auth>\n                        <Switch>\n                            <Route exact path=\"/\" component={UploadMeat} />\n                            <Route exact path=\"/done\" component={Done} />\n                            <Route render={() => <p>not found.</p>} />\n                        </Switch>\n                    </Auth>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default RouteFarmers;","export default __webpack_public_path__ + \"static/media/logo_kuro.32c85003.png\";","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SlideRoutes from \"react-slide-routes\";\nimport { Route, NavLink, useLocation } from \"react-router-dom\";\nimport TopPage from './toppage';\nimport RouteFarmers from './route_farmers'\nimport SignUp from './signup';\n// import UploadMeat from './upload_meat';\n\nimport logo from './../img/logo_kuro.png';\nimport './head.css'\n\nconst Head = () => {\n  // 牧場の方のログインボタン\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n  \n  // export default function TextButtons() {\n    const classes = useStyles();\n    const location = useLocation();\n\n  return (\n    <div>\n      <div className=\"head\">\n        <img src={logo} className=\"logo\" width=\"120px\" alt=\"logo\" />\n        <nav className=\"farmers_btn\">\n          <NavLink to=\"/farmers\">牧場の方はこちら</NavLink>\n        </nav>\n      </div>\n      <div>\n        <SlideRoutes location={location} duration={500}>\n          <Route path=\"/\" component={TopPage} exact />\n          <Route path=\"/farmers\" component={RouteFarmers} />\n        </SlideRoutes>\n      </div>\n    </div>\n  )};\n\n  export default Head","import Head from './components/head';\n// import TopPage from './components/toppage.js';\n// import Eat from './components/eat.js';\n// import Login from './components/login.js';\n// import UploadMeat from './components/upload_meat.js';\n\n// import Test from './components/test.js';\n\nconst App = () => {\n\n  return (\n    <div>\n      <Head />\n      {/* <TopPage /> */}\n      {/* <Eat /> */}\n      {/* <Login /> */}\n      {/* <Test /> */}\n      {/* <UploadMeat /> */}\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}