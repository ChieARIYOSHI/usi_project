{"ast":null,"code":"var _jsxFileName = \"/Users/qrec-pm/usi_project/src/components/signup.js\";\nimport React from 'react'; // import { Form } from 'react-bootstrap';\n\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false //処理中にボタンにspinner表示する制御用\n\n    };\n    this._isMounted = false;\n\n    this.handleOnSubmit = values => {\n      //spinner表示開始\n      if (this._isMounted) this.setState({\n        loading: true\n      }); //新規登録処理\n\n      firebase.auth().createUserWithEmailAndPassword(values.email, values.password).then(res => {\n        //正常終了時\n        //spinner表示終了\n        if (this._isMounted) this.setState({\n          loading: false\n        }); //Homeに移動\n\n        this.props.history.push(\"/\"); //history.pushを使うためwithRouterしている\n      }).catch(error => {\n        //異常終了時\n        if (this._isMounted) this.setState({\n          loading: false\n        });\n        alert(error);\n      });\n    };\n\n    this.componentDidMount = () => {\n      this._isMounted = true;\n    };\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto\",\n        style: {\n          width: 400,\n          background: '#eee',\n          padding: 20,\n          marginTop: 60\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"\\u65B0\\u898F\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            tel: ''\n          },\n          onSubmit: values => this.handleOnSubmit(values),\n          validationSchema: Yup.object().shape({\n            email: Yup.string().email().required(),\n            password: Yup.string().required(),\n            tel: Yup.string().required()\n          }),\n          children: ({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"name\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                id: \"email\",\n                value: values.email,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                invalid: touched.email && errors.email ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                name: \"password\",\n                id: \"password\",\n                value: values.password,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                invalid: touched.password && errors.password ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"tel\",\n                children: \"Tel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"tel\",\n                name: \"tel\",\n                id: \"tel\",\n                value: values.tel,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                invalid: touched.tel && errors.tel ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: errors.tel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                type: \"submit\",\n                disabled: this.state.loading,\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  size: \"sm\",\n                  color: \"light\",\n                  style: {\n                    marginRight: 5\n                  },\n                  hidden: !this.state.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this), \"\\u65B0\\u898F\\u767B\\u9332\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto\",\n        style: {\n          width: 400,\n          background: '#fff',\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u306F\\u3053\\u3061\\u3089\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/qrec-pm/usi_project/src/components/signup.js"],"names":["React","Button","Form","FormGroup","Label","Input","FormFeedback","Spinner","Link","withRouter","Formik","Yup","firebase","SignUp","Component","state","loading","_isMounted","handleOnSubmit","values","setState","auth","createUserWithEmailAndPassword","email","password","then","res","props","history","push","catch","error","alert","componentDidMount","componentWillUnmount","render","width","background","padding","marginTop","textAlign","tel","object","shape","string","required","handleSubmit","handleChange","handleBlur","errors","touched","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { Form } from 'react-bootstrap';\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\n\nclass SignUp extends React.Component {\n\n    state = {\n        loading: false, //処理中にボタンにspinner表示する制御用\n    }\n\n    _isMounted = false;\n\n    //Submitされたら\n    handleOnSubmit = (values) => {\n        //spinner表示開始\n        if (this._isMounted) this.setState({ loading: true });\n        //新規登録処理\n        firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\n            .then(res => {\n                //正常終了時\n                //spinner表示終了\n                if (this._isMounted) this.setState({ loading: false });\n                //Homeに移動\n                this.props.history.push(\"/\"); //history.pushを使うためwithRouterしている\n            })\n            .catch(error => {\n                //異常終了時\n                if (this._isMounted) this.setState({ loading: false });\n                alert(error);\n            });\n    }\n\n    componentDidMount = () => {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"mx-auto\" style={{ width: 400, background: '#eee', padding: 20, marginTop: 60 }}>\n                    <p style={{ textAlign: 'center' }}>新規登録</p>\n                    <Formik\n                        initialValues={{ email: '', password: '', tel: '' }}\n                        onSubmit={(values) => this.handleOnSubmit(values)}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string().email().required(),\n                            password: Yup.string().required(),\n                            tel: Yup.string().required(),\n                        })}\n                    >\n                        {\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n                                <Form onSubmit={handleSubmit}>\n                                    <FormGroup>\n                                        <Label for=\"name\">Email</Label>\n                                        <Input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            id=\"email\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.email && errors.email ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.email}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"password\">Password</Label>\n                                        <Input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            id=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.password && errors.password ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.password}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"tel\">Tel</Label>\n                                        <Input\n                                            type=\"tel\"\n                                            name=\"tel\"\n                                            id=\"tel\"\n                                            value={values.tel}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            invalid={touched.tel && errors.tel ? true : false}\n                                        />\n                                        <FormFeedback>\n                                            {errors.tel}\n                                        </FormFeedback>\n                                    </FormGroup>\n                                    <div style={{ textAlign: 'center' }}>\n                                        <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                                            <Spinner size=\"sm\" color=\"light\" style={{ marginRight: 5 }} hidden={!this.state.loading} />\n                                            新規登録\n                                        </Button>\n                                    </div>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n                <div className=\"mx-auto\" style={{ width: 400, background: '#fff', padding: 20 }}>\n                    <Link to=\"/signin\">ログインはこちら。</Link>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}