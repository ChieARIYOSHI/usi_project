{"ast":null,"code":"import _classCallCheck from\"/Users/qrec-pm/usi_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/qrec-pm/usi_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/qrec-pm/usi_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/qrec-pm/usi_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Redirect}from'react-router-dom';import firebase from'firebase';import LoadingOverlay from'react-loading-overlay';import{jsx as _jsx}from\"react/jsx-runtime\";var Auth=/*#__PURE__*/function(_React$Component){_inherits(Auth,_React$Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={signinCheck:false,//ログインチェックが完了してるか\nsignedIn:false//ログインしてるか\n};_this._isMounted=false;_this.componentDidMount=function(){//mountされてる\n_this._isMounted=true;//ログインしてるかどうかチェック\nfirebase.auth().onAuthStateChanged(function(user){if(user){//してる\nif(_this._isMounted){_this.setState({signinCheck:true,signedIn:true});}}else{//してない\nif(_this._isMounted){_this.setState({signinCheck:true,signedIn:false});}}});};_this.componentWillUnmount=function(){_this._isMounted=false;};return _this;}_createClass(Auth,[{key:\"render\",value:function render(){//チェックが終わってないなら（ローディング表示）\nif(!this.state.signinCheck){return/*#__PURE__*/_jsx(LoadingOverlay,{active:true,spinner:true,text:\"Loading...\",children:/*#__PURE__*/_jsx(\"div\",{style:{height:'100vh',width:'100vw'}})});}//チェックが終わりかつ\nif(this.state.signedIn){//サインインしてるとき（そのまま表示）\nreturn this.props.children;}else{//してないとき（ログイン画面にリダイレクト）\nreturn/*#__PURE__*/_jsx(Redirect,{to:\"/signin\"});}}}]);return Auth;}(React.Component);export default Auth;","map":{"version":3,"sources":["/Users/qrec-pm/usi_project/src/Auth.js"],"names":["React","Redirect","firebase","LoadingOverlay","Auth","state","signinCheck","signedIn","_isMounted","componentDidMount","auth","onAuthStateChanged","user","setState","componentWillUnmount","height","width","props","children","Component"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,C,8CAEMC,CAAAA,I,+TAEFC,K,CAAQ,CACJC,WAAW,CAAE,KADT,CACgB;AACpBC,QAAQ,CAAE,KAAO;AAFb,C,OAKRC,U,CAAa,K,OAEbC,iB,CAAoB,UAAM,CACtB;AACA,MAAKD,UAAL,CAAkB,IAAlB,CAEA;AACAN,QAAQ,CAACQ,IAAT,GAAgBC,kBAAhB,CAAmC,SAAAC,IAAI,CAAI,CACvC,GAAIA,IAAJ,CAAU,CACN;AACA,GAAI,MAAKJ,UAAT,CAAqB,CACjB,MAAKK,QAAL,CAAc,CACVP,WAAW,CAAE,IADH,CAEVC,QAAQ,CAAE,IAFA,CAAd,EAIH,CACJ,CARD,IAQO,CACH;AACA,GAAI,MAAKC,UAAT,CAAqB,CACjB,MAAKK,QAAL,CAAc,CACVP,WAAW,CAAE,IADH,CAEVC,QAAQ,CAAE,KAFA,CAAd,EAIH,CACJ,CACJ,CAlBD,EAmBH,C,OAEDO,oB,CAAuB,UAAM,CACzB,MAAKN,UAAL,CAAkB,KAAlB,CACH,C,sDAED,iBAAS,CACL;AACA,GAAI,CAAC,KAAKH,KAAL,CAAWC,WAAhB,CAA6B,CACzB,mBACI,KAAC,cAAD,EACI,MAAM,CAAE,IADZ,CAEI,OAAO,KAFX,CAGI,IAAI,CAAC,YAHT,uBAKI,YAAK,KAAK,CAAE,CAAES,MAAM,CAAE,OAAV,CAAmBC,KAAK,CAAE,OAA1B,CAAZ,EALJ,EADJ,CASH,CAED;AACA,GAAI,KAAKX,KAAL,CAAWE,QAAf,CAAyB,CACrB;AACA,MAAO,MAAKU,KAAL,CAAWC,QAAlB,CACH,CAHD,IAGO,CACH;AACA,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,EAAP,CACH,CACJ,C,kBA7DclB,KAAK,CAACmB,S,EA+DzB,cAAef,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Auth extends React.Component {\n\n    state = {\n        signinCheck: false, //ログインチェックが完了してるか\n        signedIn: false, //ログインしてるか\n    }\n\n    _isMounted = false; //unmountを判断（エラー防止用）\n\n    componentDidMount = () => {\n        //mountされてる\n        this._isMounted = true;\n\n        //ログインしてるかどうかチェック\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                //してる\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: true,\n                    });\n                }\n            } else {\n                //してない\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: false,\n                    });\n                }\n            }\n        })\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        //チェックが終わってないなら（ローディング表示）\n        if (!this.state.signinCheck) {\n            return (\n                <LoadingOverlay\n                    active={true}\n                    spinner\n                    text='Loading...'\n                >\n                    <div style={{ height: '100vh', width: '100vw' }}></div>\n                </ LoadingOverlay>\n            );\n        }\n\n        //チェックが終わりかつ\n        if (this.state.signedIn) {\n            //サインインしてるとき（そのまま表示）\n            return this.props.children;\n        } else {\n            //してないとき（ログイン画面にリダイレクト）\n            return <Redirect to=\"/signin\" />\n        }\n    }\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}