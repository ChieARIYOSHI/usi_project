{"ast":null,"code":"var _jsxFileName = \"/Users/qrec-pm/usi_project/src/Auth.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from './firebase';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      signinCheck: false,\n      //ログインチェックが完了してるか\n      signedIn: false //ログインしてるか\n\n    };\n    this._isMounted = false;\n\n    this.componentDidMount = () => {\n      //mountされてる\n      this._isMounted = true; //ログインしてるかどうかチェック\n\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          //してる\n          if (this._isMounted) {\n            this.setState({\n              signinCheck: true,\n              signedIn: true\n            });\n          }\n        } else {\n          //してない\n          if (this._isMounted) {\n            this.setState({\n              signinCheck: true,\n              signedIn: false\n            });\n          }\n        }\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n    };\n  }\n\n  render() {\n    //チェックが終わってないなら（ローディング表示）\n    if (!this.state.signinCheck) {\n      return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: true,\n        spinner: true,\n        text: \"Loading...\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100vh',\n            width: '100vw'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    } //チェックが終わりかつ\n\n\n    if (this.state.signedIn) {\n      //サインインしてるとき（そのまま表示）\n      return this.props.children;\n    } else {\n      //してないとき（ログイン画面にリダイレクト）\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/qrec-pm/usi_project/src/Auth.js"],"names":["React","Redirect","firebase","LoadingOverlay","Auth","Component","state","signinCheck","signedIn","_isMounted","componentDidMount","auth","onAuthStateChanged","user","setState","componentWillUnmount","render","height","width","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,WAAW,EAAE,KADT;AACgB;AACpBC,MAAAA,QAAQ,EAAE,KAFN,CAEa;;AAFb,KAFuB;AAAA,SAO/BC,UAP+B,GAOlB,KAPkB;;AAAA,SAS/BC,iBAT+B,GASX,MAAM;AACtB;AACA,WAAKD,UAAL,GAAkB,IAAlB,CAFsB,CAItB;;AACAP,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AACvC,YAAIA,IAAJ,EAAU;AACN;AACA,cAAI,KAAKJ,UAAT,EAAqB;AACjB,iBAAKK,QAAL,CAAc;AACVP,cAAAA,WAAW,EAAE,IADH;AAEVC,cAAAA,QAAQ,EAAE;AAFA,aAAd;AAIH;AACJ,SARD,MAQO;AACH;AACA,cAAI,KAAKC,UAAT,EAAqB;AACjB,iBAAKK,QAAL,CAAc;AACVP,cAAAA,WAAW,EAAE,IADH;AAEVC,cAAAA,QAAQ,EAAE;AAFA,aAAd;AAIH;AACJ;AACJ,OAlBD;AAmBH,KAjC8B;;AAAA,SAmC/BO,oBAnC+B,GAmCR,MAAM;AACzB,WAAKN,UAAL,GAAkB,KAAlB;AACH,KArC8B;AAAA;;AAuC/BO,EAAAA,MAAM,GAAG;AACL;AACA,QAAI,CAAC,KAAKV,KAAL,CAAWC,WAAhB,EAA6B;AACzB,0BACI,QAAC,cAAD;AACI,QAAA,MAAM,EAAE,IADZ;AAEI,QAAA,OAAO,MAFX;AAGI,QAAA,IAAI,EAAC,YAHT;AAAA,+BAKI;AAAK,UAAA,KAAK,EAAE;AAAEU,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,KAAK,EAAE;AAA1B;AAAZ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAZI,CAcL;;;AACA,QAAI,KAAKZ,KAAL,CAAWE,QAAf,EAAyB;AACrB;AACA,aAAO,KAAKW,KAAL,CAAWC,QAAlB;AACH,KAHD,MAGO;AACH;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AA7D8B;;AAgEnC,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from './firebase';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Auth extends React.Component {\n\n    state = {\n        signinCheck: false, //ログインチェックが完了してるか\n        signedIn: false, //ログインしてるか\n    }\n\n    _isMounted = false; //unmountを判断（エラー防止用）\n\n    componentDidMount = () => {\n        //mountされてる\n        this._isMounted = true;\n\n        //ログインしてるかどうかチェック\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                //してる\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: true,\n                    });\n                }\n            } else {\n                //してない\n                if (this._isMounted) {\n                    this.setState({\n                        signinCheck: true,\n                        signedIn: false,\n                    });\n                }\n            }\n        })\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render() {\n        //チェックが終わってないなら（ローディング表示）\n        if (!this.state.signinCheck) {\n            return (\n                <LoadingOverlay\n                    active={true}\n                    spinner\n                    text='Loading...'\n                >\n                    <div style={{ height: '100vh', width: '100vw' }}></div>\n                </ LoadingOverlay>\n            );\n        }\n\n        //チェックが終わりかつ\n        if (this.state.signedIn) {\n            //サインインしてるとき（そのまま表示）\n            return this.props.children;\n        } else {\n            //してないとき（ログイン画面にリダイレクト）\n            return <Redirect to=\"/signin\" />\n        }\n    }\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}